{"version":3,"sources":["webpack:///./node_modules/gatsby-theme-carbon/src/components/PageHeader/index.js","webpack:///./node_modules/gatsby-theme-carbon/src/components/PageHeader/PageHeader.js","webpack:///./node_modules/gatsby-theme-carbon/src/components/EditLink/index.js","webpack:///./node_modules/gatsby-theme-carbon/src/components/EditLink/EditLink.js","webpack:///./node_modules/gatsby-theme-carbon/src/components/PageTabs/index.js","webpack:///./node_modules/gatsby-theme-carbon/src/components/PageTabs/PageTabs.js","webpack:///./node_modules/gatsby-theme-carbon/src/templates/Default.js","webpack:///./node_modules/gatsby-theme-carbon/src/components/EditLink/EditLink.module.scss","webpack:///./node_modules/gatsby-theme-carbon/src/components/PageTabs/PageTabs.module.scss","webpack:///./node_modules/gatsby-theme-carbon/src/components/PageHeader/PageHeader.module.scss","webpack:///./src/pages/getting-started/index.mdx"],"names":["PageHeader","title","theme","tabs","className","cx","styles","pageHeader","withTabs","length","darkMode","id","text","EditLink","relativePagePath","repositoryProp","repository","useStaticQuery","site","siteMetadata","baseUrl","subDirectory","href","branch","row","link","PageTabs","render","this","props","slug","currentTab","split","filter","Boolean","slice","pageTabs","map","tab","slugifiedTab","slugify","lower","strict","selected","currentTabRegex","RegExp","replace","key","selectedItem","listItem","to","tabsContainer","aria-label","list","React","Component","Default","pageContext","children","location","Title","frontmatter","titleType","frontmatterTheme","description","keywords","interiorTheme","useMetadata","pathPrefix","pathname","Layout","homepage","pageTitle","pageDescription","pageKeywords","label","Main","padded","NextPrevious","Utils","module","exports","name","_frontmatter","PageDescription","console","warn","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","mdxType","parentName","isMDXComponent"],"mappings":"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","file":"component---src-pages-getting-started-index-mdx-26b51f3c091ea4bde041.js","sourcesContent":["import PageHeader from './PageHeader';\n\nexport default PageHeader;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport cx from 'classnames';\nimport styles from './PageHeader.module.scss';\n\nconst PageHeader = ({ title, theme, tabs = [] }) => (\n  <div\n    className={cx(styles.pageHeader, {\n      [styles.withTabs]: tabs.length,\n      [styles.darkMode]: theme === 'dark',\n    })}>\n    <div className=\"bx--grid\">\n      <div className=\"bx--row\">\n        <div className=\"bx--col-lg-12\">\n          <h1 id=\"page-title\" className={styles.text}>\n            {title}\n          </h1>\n        </div>\n      </div>\n    </div>\n  </div>\n);\n\nPageHeader.propTypes = {\n  /**\n   * Specify the title for the page\n   */\n  title: PropTypes.node,\n};\n\nexport default PageHeader;\n","import EditLink from './EditLink';\n\nexport default EditLink;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { graphql, useStaticQuery } from 'gatsby';\n\nimport { link, row } from './EditLink.module.scss';\n\nconst EditLink = ({ relativePagePath, repository: repositoryProp }) => {\n  const {\n    site: {\n      siteMetadata: { repository },\n    },\n  } = useStaticQuery(graphql`\n    query REPOSITORY_QUERY {\n      site {\n        siteMetadata {\n          repository {\n            baseUrl\n            subDirectory\n            branch\n          }\n        }\n      }\n    }\n  `);\n\n  const { baseUrl, subDirectory, branch } = repositoryProp || repository;\n\n  const href = `${baseUrl}/edit/${branch}${subDirectory}/src/pages${relativePagePath}`;\n\n  return baseUrl ? (\n    <div className={`bx--row ${row}`}>\n      <div className=\"bx--col\">\n        <a className={link} href={href}>\n          Edit this page on GitHub\n        </a>\n      </div>\n    </div>\n  ) : null;\n};\n\nEditLink.propTypes = {\n  repository: PropTypes.shape({\n    baseUrl: PropTypes.string,\n    subDirectory: PropTypes.string,\n    branch: PropTypes.string,\n  }),\n  relativePagePath: PropTypes.string,\n};\n\nexport default EditLink;\n","import PageTabs from './PageTabs';\n\nexport default PageTabs;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'gatsby';\nimport slugify from 'slugify';\nimport cx from 'classnames';\n\nimport {\n  tabsContainer,\n  list,\n  selectedItem,\n  listItem,\n  link,\n} from './PageTabs.module.scss';\n\nexport default class PageTabs extends React.Component {\n  render() {\n    const { title, tabs, slug } = this.props;\n    const currentTab = slug.split('/').filter(Boolean).slice(-1)[0];\n\n    const pageTabs = tabs.map((tab) => {\n      const slugifiedTab = slugify(tab, { lower: true, strict: true });\n      const selected = slugifiedTab === currentTab;\n      // matches with or without trailing slash: /?\n      // matches with or without hash link: (#.*)?\n      const currentTabRegex = new RegExp(`${currentTab}/?(#.*)?$`);\n      const href = slug.replace(currentTabRegex, slugifiedTab);\n      return (\n        <li key={tab} className={cx({ [selectedItem]: selected }, listItem)}>\n          <Link className={link} to={`${href}`}>\n            {tab}\n          </Link>\n        </li>\n      );\n    });\n\n    return (\n      <div className={tabsContainer}>\n        <div className=\"bx--grid\">\n          <div className=\"bx--row\">\n            <div className=\"bx--col-lg-12 bx--col-no-gutter\">\n              <nav aria-label={title}>\n                <ul className={list}>{pageTabs}</ul>\n              </nav>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nPageTabs.propTypes = {\n  tabs: PropTypes.array,\n  slug: PropTypes.string,\n};\n","import React from 'react';\nimport slugify from 'slugify';\nimport { useStaticQuery, graphql } from 'gatsby';\n\nimport Utils from '../components/Utils';\nimport Layout from '../components/Layout';\nimport PageHeader from '../components/PageHeader';\nimport EditLink from '../components/EditLink';\nimport NextPrevious from '../components/NextPrevious';\nimport PageTabs from '../components/PageTabs';\nimport Main from '../components/Main';\nimport useMetadata from '../util/hooks/useMetadata';\n\nconst Default = ({ pageContext, children, location, Title }) => {\n  const { frontmatter = {}, relativePagePath, titleType } = pageContext;\n  const {\n    tabs,\n    title,\n    theme: frontmatterTheme,\n    description,\n    keywords,\n  } = frontmatter;\n\n  const { interiorTheme } = useMetadata();\n\n  // get the path prefix if it exists\n  const {\n    site: { pathPrefix },\n  } = useStaticQuery(graphql`\n    query PATH_PREFIX_QUERY {\n      site {\n        pathPrefix\n      }\n    }\n  `);\n\n  // let gatsby handle prefixing\n  const slug = pathPrefix\n    ? location.pathname.replace(pathPrefix, '')\n    : location.pathname;\n\n  const getCurrentTab = () => {\n    if (!tabs) return '';\n    return (\n      slug.split('/').filter(Boolean).slice(-1)[0] ||\n      slugify(tabs[0], { lower: true })\n    );\n  };\n\n  const currentTab = getCurrentTab();\n\n  const theme = frontmatterTheme || interiorTheme;\n\n  return (\n    <Layout\n      tabs={tabs}\n      homepage={false}\n      theme={theme}\n      pageTitle={title}\n      pageDescription={description}\n      pageKeywords={keywords}\n      titleType={titleType}>\n      <PageHeader\n        title={Title ? <Title /> : title}\n        label=\"label\"\n        tabs={tabs}\n        theme={theme}\n      />\n      {tabs && (\n        <PageTabs\n          title={title}\n          slug={slug}\n          tabs={tabs}\n          currentTab={currentTab}\n        />\n      )}\n      <Main padded>\n        {children}\n        <EditLink relativePagePath={relativePagePath} />\n      </Main>\n      <NextPrevious\n        pageContext={pageContext}\n        location={location}\n        slug={slug}\n        tabs={tabs}\n        currentTab={currentTab}\n      />\n      <Utils />\n    </Layout>\n  );\n};\n\nexport default Default;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"bxTextTruncateEnd\":\"EditLink-module--bx--text-truncate--end--2pqje\",\"bxTextTruncateFront\":\"EditLink-module--bx--text-truncate--front--3_lIE\",\"link\":\"EditLink-module--link--1qzW3\",\"row\":\"EditLink-module--row--1B9Gk\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"bxTextTruncateEnd\":\"PageTabs-module--bx--text-truncate--end--267NA\",\"bxTextTruncateFront\":\"PageTabs-module--bx--text-truncate--front--3xEQF\",\"tabsContainer\":\"PageTabs-module--tabs-container--8N4k0\",\"list\":\"PageTabs-module--list--3eFQc\",\"listItem\":\"PageTabs-module--list-item--nUmtD\",\"link\":\"PageTabs-module--link--1mDJ1\",\"selectedItem\":\"PageTabs-module--selected-item--YPVr3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"bxTextTruncateEnd\":\"PageHeader-module--bx--text-truncate--end--mZWeX\",\"bxTextTruncateFront\":\"PageHeader-module--bx--text-truncate--front--3zvrI\",\"pageHeader\":\"PageHeader-module--page-header--3hIan\",\"darkMode\":\"PageHeader-module--dark-mode--hBrwL\",\"withTabs\":\"PageHeader-module--with-tabs--3nKxA\",\"text\":\"PageHeader-module--text--o9LFq\"};","import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\n\nimport DefaultLayout from \"/home/danielwaddington/mcas/docs/node_modules/gatsby-theme-carbon/src/templates/Default.js\";\nexport const _frontmatter = {};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst PageDescription = makeShortcode(\"PageDescription\");\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <PageDescription mdxType=\"PageDescription\">\n      <p>{`MCAS is designed for flexible deployment.  However, it is positioned for\nspecific network and memory hardware if available.`}</p>\n    </PageDescription>\n    <h2>{`Platform Preparation`}</h2>\n    <ol>\n      <li parentName=\"ol\">\n        <p parentName=\"li\"><strong parentName=\"p\">{`Operating System`}</strong>{` - install one of the following supported distributions:`}</p>\n        <ul parentName=\"li\">\n          <li parentName=\"ul\">{`Ubuntu 18.04 LTS x86_64`}</li>\n          <li parentName=\"ul\">{`Fedora Core 27, 30 or 32 x86_64`}</li>\n          <li parentName=\"ul\">{`RHEL8 x86_64`}</li>\n        </ul>\n      </li>\n      <li parentName=\"ol\">\n        <p parentName=\"li\"><strong parentName=\"p\">{`Mellanox RDMA`}</strong>{` - for high-performance MCAS supports Mellanox RDMA network\ncards and has been tested with ConnectX-4 and ConnectX-5.  MCAS can operate with\nplain TCP/IP sockets, but performance is significantly slower.  Mellanox OFED\n(OpenFabrics Enterprise Distribution for Linux) distributions can be downloaded\nfrom `}<a parentName=\"p\" {...{\n            \"href\": \"https://www.mellanox.com/products/infiniband-drivers/linux/mlnx_ofed\"\n          }}>{`https://www.mellanox.com/products/infiniband-drivers/linux/mlnx_ofed`}</a>{`.`}</p>\n        <pre parentName=\"li\"><code parentName=\"pre\" {...{\n            \"className\": \"language-bash\"\n          }}>{`  $ ibdev2netdev\n  mlx5_0 port 1 ==> enp216s0f0 (Up)\n  mlx5_1 port 1 ==> enp216s0f1 (Up)\n`}</code></pre>\n      </li>\n      <li parentName=\"ol\">\n        <p parentName=\"li\"><strong parentName=\"p\">{`Persistent Memory`}</strong>{` - MCAS is designed explicitly for persistent memory.  However,\nit can be used with DRAM only (mapstore) or with emulated persistent memory.\nEmulated or real persistent memory must be\nconfigured in `}<em parentName=\"p\">{`device DAX`}</em>{` mode.  See `}<a parentName=\"p\" {...{\n            \"href\": \"https://pmem.io/2016/02/22/pm-emulation.html\"\n          }}>{`https://pmem.io/2016/02/22/pm-emulation.html`}</a>{` for\ninformation on PM emulation.  Verify availability of devdax PM:`}</p>\n        <pre parentName=\"li\"><code parentName=\"pre\" {...{\n            \"className\": \"language-bash\"\n          }}>{`ls /dev/dax*\nchmod a+rwx /dev/dax*\n`}</code></pre>\n      </li>\n    </ol>\n    <h2>{`Building MCAS`}</h2>\n    <ol>\n      <li parentName=\"ol\">\n        <p parentName=\"li\">{`Check out source and update submodules:`}</p>\n        <pre parentName=\"li\"><code parentName=\"pre\" {...{\n            \"className\": \"language-sh\"\n          }}>{`git clone https://github.com/IBM/mcas.git\ncd mcas\ngit submodule update --init --recursive\n`}</code></pre>\n      </li>\n      <li parentName=\"ol\">\n        <p parentName=\"li\">{`Install package dependencies. For example:`}</p>\n        <pre parentName=\"li\"><code parentName=\"pre\" {...{\n            \"className\": \"language-sh\"\n          }}>{`cd mcas/deps\nsudo ./install-yum-fc27.sh\n`}</code></pre>\n      </li>\n      <li parentName=\"ol\">\n        <p parentName=\"li\">{`Configure cmake build (e.g. release build):`}</p>\n        <pre parentName=\"li\"><code parentName=\"pre\" {...{\n            \"className\": \"language-sh\"\n          }}>{`mkdir build\ncd build\ncmake -DBUILD_KERNEL_SUPPORT=ON -DFLATBUFFERS_BUILD_TESTS=0 -DTBB_BUILD_TESTS=0 -DBUILD_PYTHON_SUPPORT=1 -DCMAKE_BUILD_TYPE=Release -DCMAKE_INSTALL_PREFIX:PATH=\\`pwd\\`/dist ..\n`}</code></pre>\n      </li>\n      <li parentName=\"ol\">\n        <p parentName=\"li\">{`Make bootstrap (this only needs to happen once):`}</p>\n        <pre parentName=\"li\"><code parentName=\"pre\" {...{\n            \"className\": \"language-sh\"\n          }}>{`make bootstrap\n`}</code></pre>\n      </li>\n      <li parentName=\"ol\">\n        <p parentName=\"li\">{`Perform rest of build (which can be repeated on code change):`}</p>\n        <pre parentName=\"li\"><code parentName=\"pre\" {...{\n            \"className\": \"language-sh\"\n          }}>{`make -j install\n`}</code></pre>\n      </li>\n    </ol>\n    <h2>{`Before running code`}</h2>\n    <p>{`MCAS currently requires two custom kernel modules.  One, `}<inlineCode parentName=\"p\">{`xpmem.ko`}</inlineCode>{` is needed for the ‘mapstore’ backend component.  The other, `}<inlineCode parentName=\"p\">{`mcasmod.ko`}</inlineCode>{` is needed for the ‘hstore’ components.  Normmaly, both modules should be loaded into the system after they have been build.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-sh\"\n      }}>{`insmod ./dist/lib/modules/4.18.19-100.fc27.x86_64/xpmem.ko\n`}</code></pre>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-sh\"\n      }}>{`insmod ./dist/bin/mcasmod.ko\n`}</code></pre>\n    <p><strong parentName=\"p\">{`Note`}</strong>{`: the `}<em parentName=\"p\">{`hstore`}</em>{` backend is preferred.  If you are using the\n`}<em parentName=\"p\">{`mapstore`}</em>{` backend, the direct operations (e.g. ‘get_direct,\nput_direct) that perform zero-copy DMA transfers will not work.`}</p>\n    <h2>{`Running an example`}</h2>\n    <h3>{`Launch MCAS server`}</h3>\n    <p>{`The MCAS server can be launched from the build directory.  Using one of the pre-supplied (testing) configuration files:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-bash\"\n      }}>{`./dist/bin/mcas --conf ./dist/testing/mapstore-0.conf\n`}</code></pre>\n    <p>{`This configuration file defines a single shard, using port 11911 on the `}<inlineCode parentName=\"p\">{`mlx5_0`}</inlineCode>{` RDMA NIC adapter.`}</p>\n    <p>{`Note, `}<inlineCode parentName=\"p\">{`./dist`}</inlineCode>{` is the location of the installed distribution.`}</p>\n    <h3>{`Launch the Python client`}</h3>\n    <p>{`Again, from the build directory:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-bash\"\n      }}>{`./dist/bin/mcas-shell\n`}</code></pre>\n    <p>{`First open a session to the MCAS server:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-python\"\n      }}>{`session = mcas.Session(ip='10.0.0.101', port=11911)\n`}</code></pre>\n    <p>{`Next create a pool. Provide pool name, size of pool in bytes and expected number of objects (presizes hash table):`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-python\"\n      }}>{`pool = session.create_pool('pool0', 64*1024, 1000)\n`}</code></pre>\n    <p>{`Now we can create key-value pairs:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-python\"\n      }}>{`pool.put('myPet','doggy')\n`}</code></pre>\n    <p>{`And then retrieve the value back:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-python\"\n      }}>{`pool.get('myPet')\n`}</code></pre>\n    <p>{`We can configure a volatile index for the pool.  This allows us to perform scans on the key space - find_key(expression, offset).`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-python\"\n      }}>{`pool.configure(\"AddIndex::VolatileTree\")\npool.find_key('regex:.*', 0)\n`}</code></pre>\n    <p>{`Finally, the pool can be closed.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-python\"\n      }}>{`pool.close()\n`}</code></pre>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}